* format-sql

[[https://travis-ci.org/paetzke/format-sql][https://travis-ci.org/paetzke/format-sql.svg?branch=master]]
[[https://coveralls.io/r/paetzke/format-sql?branch=master][https://coveralls.io/repos/paetzke/format-sql/badge.png?branch=master]]
[[https://pypi.python.org/pypi/format-sql/][https://pypip.in/v/format-sql/badge.png]]


Makes your SQL readable.


An example:

#+BEGIN_SRC python
    sql = """ SELECT country, product, SUM(profit) FROM
sales   left join x on x.id=sales.k GROUP BY country,
product having f > 7 and fk=9 limit 5;    """
#+END_SRC

Will result in:

#+BEGIN_SRC python
    sql = """
        SELECT
            country,
            product,
            SUM(profit)
        FROM
            sales
            LEFT JOIN x ON
                x.id = sales.k
        GROUP BY
            country,
            product
        HAVING
            f > 7
            AND fk = 9
        LIMIT 5; """
#+END_SRC


Install =format-sql= via =pip=:

#+BEGIN_SRC bash
$ pip install format-sql
#+END_SRC

You can then just call =format-sql= with files and directories:

#+BEGIN_SRC bash
$ format-sql -h
usage: format-sql [-h] [--types TYPES] [-r] [--no-semicolon] paths [paths ...]

positional arguments:
  paths

optional arguments:
  -h, --help       show this help message and exit
  --types TYPES    Only process these given file types.
  -r, --recursive  Process files found in subdirectories.
  --no-semicolon   Try to detect SQL queries with no trailing semicolon.
#+END_SRC

For example:

#+BEGIN_SRC bash
$ format-sql my-file.py
#+END_SRC

Or recursively with directory:

#+BEGIN_SRC bash
$ format-sql -r my-directory/
#+END_SRC

You can try format-sql online: [[https://paetzke.me/format-sql]].
